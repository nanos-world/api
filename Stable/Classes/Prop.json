{
	"name": "Prop",
	"description": "A Prop represents a Dynamic Mesh which can be spawned in the world, can be grabbed around by characters and have physics.",
	"authority": "both",
	"inheritance": [
		"Entity",
		"Actor",
		"Paintable"
	],
	"constructors": [
		{
			"description": "Default Constructor",
			"parameters": [
				{
					"type": "Vector",
					"name": "location"
				},
				{
					"type": "Rotator",
					"name": "rotation"
				},
				{
					"type": "StaticMeshPath",
					"name": "asset"
				},
				{
					"type": "CollisionType",
					"name": "collision_type",
					"default": "CollisionType.Auto",
					"description": "Setting <code>CollisionType.Auto</code> will make it automatically switch between <b>Normal</b> and <b>IgnoreOnlyPawn</b> if they are smaller than radius <b>40</b> units."
				},
				{
					"type": "boolean",
					"name": "gravity_enabled",
					"default": "true"
				},
				{
					"type": "GrabMode",
					"name": "grab_mode",
					"default": "GrabMode.Auto",
					"description": "Whether or not the Prop can be grabbed"
				},
				{
					"type": "CCDMode",
					"name": "ccd_mode",
					"default": "CCDMode.Auto",
					"description": "Whether or not the Prop should have CCD enabled (disabling it may cause Props passing through objects if it's kinda small). It's smart to force it disabled on 'visual only' props."
				}
			]
		}
	],
	"functions": [
		{
			"name": "SetGrabMode",
			"description": "Sets ability to Characters to Grab this Prop",
			"parameters": [
				{
					"type": "GrabMode",
					"name": "grab_mode",
					"description": "If the Prop will be able to be grabbable or not. Set to Auto to automatically define based on Prop's size."
				}
			],
			"authority": "server"
		},
		{
			"name": "SetPhysicsDamping",
			"description": "Sets the Physics damping of this Prop",
			"parameters": [
				{
					"type": "float",
					"name": "linear_damping",
					"description": ""
				},
				{
					"type": "float",
					"name": "angular_damping",
					"description": ""
				}
			],
			"authority": "authority"
		},
		{
			"name": "SetMesh",
			"description": "Changes the mesh in runtime",
			"parameters": [
				{
					"type": "StaticMeshPath",
					"name": "mesh_asset",
					"description": "asset"
				}
			],
			"authority": "authority"
		},
		{
			"name": "GetMesh",
			"description": "Gets the Asset name",
			"return": [
				{
					"type": "string",
					"description": "asset name"
				}
			],
			"authority": "both"
		},
		{
			"name": "GetHandler",
			"description": "Gets the Character (if existing) which is holding this",
			"return": [
				{
					"type": "Character?",
					"description": "the character that holds the object"
				}
			],
			"authority": "both"
		},
		{
			"name": "GetGrabMode",
			"description": "Gets ability to Grab this Prop",
			"return": [
				{
					"type": "GrabMode"
				}
			],
			"authority": "both"
		},
		{
			"authority": "client",
			"name": "GetSocketTransform",
			"description": "Gets a Socket Transform in world space given a bone name",
			"return": [
				{
					"type": "table",
					"table_properties": [
						{
							"name": "Location",
							"type": "Vector"
						},
						{
							"name": "Rotation",
							"type": "Rotator"
						}
					]
				}
			],
			"parameters": [
				{
					"name": "socket_name",
					"type": "string"
				}
			]
		}
	],
	"events": [
		{
			"name": "Grab",
			"authority": "both",
			"description": "Triggered when Character grabs a Prop",
			"arguments": [
				{
					"type": "Prop",
					"name": "self",
					"description": "The prop which was Grabbed"
				},
				{
					"type": "Character",
					"name": "character",
					"description": "The new Grabber"
				}
			]
		},
		{
			"name": "Hit",
			"authority": "both",
			"description": "Triggered when this Prop hits something",
			"arguments": [
				{
					"type": "Prop",
					"name": "self",
					"description": "The prop which has been hit"
				},
				{
					"type": "float",
					"name": "impact_force",
					"description": "The intensity of the Hit normalized by the Prop's weight"
				},
				{
					"type": "Vector",
					"name": "normal_impulse",
					"description": "The impulse direction it hits"
				},
				{
					"type": "Vector",
					"name": "impact_location",
					"description": "The world 3D location of the impact"
				},
				{
					"type": "Vector",
					"name": "velocity",
					"description": "The Prop velocity at the moment it hits"
				}
			]
		},
		{
			"name": "Interact",
			"authority": "server",
			"description": "When a Character interacts with this Prop (i.e. try to Grab it)",
			"arguments": [
				{
					"type": "Prop",
					"name": "self",
					"description": "the object that undergoes an interaction"
				},
				{
					"type": "Character",
					"name": "character",
					"description": "the character who interacts with the object"
				}
			],
			"return": [
				{
					"type": "boolean",
					"description": "Return false to prevent the interaction (i.e. prevent being grabbed)"
				}
			]
		},
		{
			"name": "TakeDamage",
			"authority": "server",
			"description": "When Prop takes Damage",
			"arguments": [
				{
					"type": "Prop",
					"name": "self",
					"description": "the object that takes the damage"
				},
				{
					"type": "integer",
					"name": "damage",
					"description": "amount of damage"
				},
				{
					"type": "string",
					"name": "bone",
					"description": "Damaged bone"
				},
				{
					"type": "DamageType",
					"name": "type",
					"description": "Damage Type"
				},
				{
					"type": "Vector",
					"name": "from_direction",
					"description": "Direction of the damage relative to the damaged actor"
				},
				{
					"type": "Player?",
					"name": "instigator",
					"description": "The player which caused the damage"
				},
				{
					"type": "Actor?",
					"name": "causer",
					"description": "The object which caused the damage"
				}
			]
		},
		{
			"name": "UnGrab",
			"authority": "both",
			"description": "Triggered when this Prop is ungrabbed",
			"arguments": [
				{
					"type": "Prop",
					"name": "self",
					"description": "The prop which has been ungrabbed"
				},
				{
					"type": "Character",
					"name": "character",
					"description": "The old Grabber"
				}
			]
		}
	]
}