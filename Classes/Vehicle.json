{
	"name": "Vehicle",
	"description": "Vehicles are wheeled entities which Characters can possesses and drive.",
	"authority": "server",
	"inheritance": [
		"Actor",
		"Paintable"
	],
	"constructor": [
		{
			"type": "Vector",
			"name": "location",
			"default": "Vector(0, 0, 0)"
		},
		{
			"type": "Rotator",
			"name": "rotation",
			"default": "Rotator(0, 0, 0)"
		},
		{
			"type": "SkeletalMeshPath",
			"name": "asset",
			"default": ""
		},
		{
			"type": "CollisionType",
			"name": "collision_type",
			"default": "CollisionType.Normal"
		},
		{
			"type": "boolean",
			"name": "gravity_enabled",
			"default": "true"
		},
		{
			"type": "boolean",
			"name": "auto_create_physics",
			"default": "true"
		},
		{
			"type": "boolean",
			"name": "auto_unflip",
			"default": "true"
		},
		{
			"type": "SoundPath",
			"name": "engine_sound_asset",
			"default": "nanos-world::A_Vehicle_Engine_01"
		},
		{
			"type": "SoundPath",
			"name": "horn_sound_asset",
			"default": "nanos-world::A_Vehicle_Horn_Toyota"
		},
		{
			"type": "SoundPath",
			"name": "brake_sound_asset",
			"default": "nanos-world::A_Vehicle_Brake"
		},
		{
			"type": "SoundPath",
			"name": "engine_start_sound_asset",
			"default": "nanos-world::A_Car_Engine_Start"
		},
		{
			"type": "SoundPath",
			"name": "vehicle_door_sound_asset",
			"default": "nanos-world::A_Vehicle_Door"
		},
		{
			"type": "boolean",
			"name": "auto_start_engine",
			"default": "true"
		}
	],
	"functions": [
		{
			"authority": "both",
			"name": "AddStaticMeshAttached",
			"description": "Spawns and Attaches a StaticMesh into this Vehicle",
			"description_long": "Could be attached to a Socket with relative Location and Rotation. Uses a custom ID to be used for removing it further<br/><br/>For customizing the Materials specific of a StaticMeshAttached, please use the following syntax as the <code>parameter_name</codein the Paintable methods: <code>attachable///[ATTACHABLE_ID]/[PARAMETER_NAME]</code>, where [ATTACHABLE_ID] is the ID of the Attachable, and [PARAMETER_NAME] is the name of the parameter you want to change.",
			"parameters": [
				{
					"type": "string",
					"name": "id",
					"description": "Used further for removing or applying material settings on it"
				},
				{
					"type": "StaticMeshPath",
					"name": "static_mesh_asset",
					"default": ""
				},
				{
					"type": "string",
					"name": "socket",
					"default": ""
				},
				{
					"type": "Vector",
					"name": "relative_location",
					"default": "Vector(0, 0, 0)"
				},
				{
					"type": "Rotator",
					"name": "relative_rotation",
					"default": "Rotator(0, 0, 0)"
				}
			]
		},
		{
			"authority": "server",
			"name": "Horn",
			"description": "Starts or stops the vehicles horn",
			"parameters": [
				{
					"type": "boolean",
					"name": "enable_horn"
				}
			]
		},
		{
			"authority": "server",
			"name": "RecreatePhysics",
			"description": "Recreate the Vehicle Physics",
			"description_long": "Call this after configuring the vehicle if using <code>auto_create_physics=false</code>"
		},
		{
			"authority": "both",
			"name": "RemoveStaticMeshAttached",
			"description": "Removes, if existing, a StaticMesh from this Vehicle given it's custom ID",
			"parameters": [
				{
					"type": "string",
					"name": "id"
				}
			]
		},
		{
			"authority": "both",
			"name": "RemoveAllStaticMeshesAttached",
			"description": "Removes all StaticMeshes attached"
		},
		{
			"authority": "server",
			"name": "SetAutoStartEngine",
			"description": "Sets if the Engine auto starts when the driver enters the Vehicle",
			"parameters": [
				{
					"type": "boolean",
					"name": "auto_start"
				}
			]
		},
		{
			"authority": "server",
			"name": "SetEngineStarted",
			"description": "Sets if the Engine is turned off/on (this will affect Lights, Sounds and ability to Throttle)",
			"parameters": [
				{
					"type": "boolean",
					"name": "started"
				}
			]
		},
		{
			"authority": "server",
			"name": "SetDifferentialSetup",
			"description": "Configures the Vehicle Differential",
			"parameters": [
				{
					"type": "DifferentialType",
					"name": "differential_type",
					"default": "DifferentialType.LimitedSlip_4W"
				},
				{
					"type": "number",
					"name": "front_rear_split",
					"default": "0.45",
					"description": "Ratio of torque split between front and rear. >0.5 means more to front <0.5 means more to rear (works only with 4W type)"
				},
				{
					"type": "number",
					"name": "front_left_right_split",
					"default": "0.5",
					"description": "Ratio of torque split between front-left and front-right. >0.5 means more to front-left <0.5 means more to front-right (works only with 4W and LimitedSlip_FrontDrive)"
				},
				{
					"type": "number",
					"name": "rear_left_right_split",
					"default": "0.5",
					"description": "Ratio of torque split between rear-left and rear-right >0.5 means more to rear-left <0.5 means more to rear-right (works only with 4W and LimitedSlip_RearDrive)"
				},
				{
					"type": "number",
					"name": "center_bias",
					"default": "1.3",
					"description": "Maximum allowed ratio of average front wheel rotation speed and rear wheel rotation speeds Acceptable range: 1 .. infinite (works only with LimitedSlip_4W)"
				},
				{
					"type": "number",
					"name": "front_bias",
					"default": "1.3",
					"description": "Maximum allowed ratio of front-left and front-right wheel rotation speeds Acceptable range: 1 .. infinite (works only with LimitedSlip_4W, LimitedSlip_FrontDrive)"
				},
				{
					"type": "number",
					"name": "rear_bias",
					"default": "1.3",
					"description": "Maximum allowed ratio of rear-left and rear-right wheel rotation speeds Acceptable range: 1 .. infinite (works only with LimitedSlip_4W, LimitedSlip_FrontDrive)"
				}
			]
		},
		{
			"authority": "server",
			"name": "SetEngineSetup",
			"description": "Configures the Vehicle Engine (Torque, RPM, Braking)",
			"parameters": [
				{
					"type": "number",
					"name": "max_torque",
					"default": "700",
					"description": "Max Engine Torque (Nm) is multiplied by TorqueCurve"
				},
				{
					"type": "number",
					"name": "max_rpm",
					"default": "5700",
					"description": "Maximum revolutions per minute of the engine"
				},
				{
					"type": "number",
					"name": "idle_rpm",
					"default": "1200",
					"description": "Idle RMP of engine then in neutral/stationary"
				},
				{
					"type": "number",
					"name": "brake_effect",
					"default": "0.05",
					"description": "Braking effect from engine, when throttle released"
				},
				{
					"type": "number",
					"name": "rev_up_moi",
					"default": "5",
					"description": "Affects how fast the engine RPM speed up"
				},
				{
					"type": "number",
					"name": "rev_down_rate",
					"default": "600",
					"description": "Affects how fast the engine RPM slows down"
				}
			]
		},
		{
			"authority": "server",
			"name": "SetAerodynamicsSetup",
			"description": "Configures the Vehicle Aerodynamics Settings",
			"parameters": [
				{
					"type": "number",
					"name": "mass",
					"default": "1500",
					"description": "Mass of the vehicle chassis"
				},
				{
					"type": "number",
					"name": "drag_coefficient",
					"default": "0.3",
					"description": "Force resisting forward motion at speed"
				},
				{
					"type": "number",
					"name": "vehicle_chassis_width",
					"default": "180",
					"description": "Chassis width used for drag force computation (cm)"
				},
				{
					"type": "number",
					"name": "vehicle_chassis_height",
					"default": "140",
					"description": "Chassis height used for drag force computation (cm)"
				},
				{
					"type": "number",
					"name": "vehicle_downforce_coefficient",
					"default": "0.3",
					"description": "Force pressing vehicle into ground at speed"
				}
			]
		},
		{
			"authority": "server",
			"name": "SetTransmissionSetup",
			"description": "Configures the Vehicle Transmission",
			"parameters": [
				{
					"type": "number",
					"name": "transmission_final_ratio",
					"default": "3.08",
					"description": "The final gear ratio multiplies the transmission gear ratios"
				},
				{
					"type": "number",
					"name": "transmission_change_up_rpm",
					"default": "4500",
					"description": "Engine Revs at which gear up change ocurrs"
				},
				{
					"type": "number",
					"name": "transmission_change_down_rpm",
					"default": "2000",
					"description": "Engine Revs at which gear down change ocurrs"
				},
				{
					"type": "number",
					"name": "transmission_gear_change_time",
					"default": "0.4",
					"description": "Time it takes to switch gears (seconds)"
				},
				{
					"type": "number",
					"name": "transmission_efficiency",
					"default": "0.94",
					"description": "Mechanical frictional losses mean transmission might operate at 0.94 (94% efficiency)"
				}
			]
		},
		{
			"authority": "server",
			"name": "SetWheel",
			"description": "Configures a Vehicle Wheel",
			"description_long": "Wheels can be updated in runtime by calling SetWheel again, you can for example change the suspension high or disable a wheel totally by toggling affected_by_engine off or setting radius to 0.",
			"parameters": [
				{
					"type": "number",
					"name": "index",
					"description": "Index of the wheel (0-N). Set it in ASC order"
				},
				{
					"type": "string",
					"name": "bone_name",
					"description": "Name of the bone to attach this wheel to"
				},
				{
					"type": "number",
					"name": "radius",
					"default": "32",
					"description": "Radius of the wheel"
				},
				{
					"type": "number",
					"name": "width",
					"default": "20",
					"description": "Width of the wheel"
				},
				{
					"type": "number",
					"name": "max_steer_angle",
					"default": "50",
					"description": "Steer angle in degrees for this wheel"
				},
				{
					"type": "Vector",
					"name": "offset",
					"default": "Vector(0, 0, 0)",
					"description": "If bone_name is specified, offset the wheel from the bone's location. Otherwise this offsets the wheel from the vehicle's origin"
				},
				{
					"type": "boolean",
					"name": "is_affected_by_engine",
					"default": "true",
					"description": "Whether engine should power this wheel"
				},
				{
					"type": "boolean",
					"name": "is_affected_by_brake",
					"default": "true",
					"description": "Whether brake should affect this wheel"
				},
				{
					"type": "boolean",
					"name": "is_affected_by_handbrake",
					"default": "true",
					"description": "Whether handbrake should affect this wheel"
				},
				{
					"type": "boolean",
					"name": "has_abs_enabled",
					"default": "false",
					"description": "Advanced Braking System Enabled"
				},
				{
					"type": "boolean",
					"name": "has_traction_control_enabled",
					"default": "false",
					"description": "Straight Line Traction Control Enabled"
				},
				{
					"type": "number",
					"name": "max_brake_torque",
					"default": "1500",
					"description": "Max brake torque for this wheel (Nm)"
				},
				{
					"type": "number",
					"name": "max_handbrake_torque",
					"default": "3000",
					"description": "Max handbrake brake torque for this wheel (Nm). A handbrake should have a stronger brake torque than the brake"
				},
				{
					"type": "number",
					"name": "cornering_stiffness",
					"default": "1000",
					"description": "Tyre Cornering Ability"
				},
				{
					"type": "number",
					"name": "side_slip_modifier",
					"default": "1",
					"description": "Wheel Lateral Skid Grip Loss, lower number less grip on skid"
				},
				{
					"type": "number",
					"name": "friction_force_multiplier",
					"default": "2",
					"description": "Friction Force Multiplier"
				},
				{
					"type": "number",
					"name": "slip_threshold",
					"default": "20",
					"description": "Wheel Longitudinal Slip Threshold"
				},
				{
					"type": "number",
					"name": "skid_threshold",
					"default": "20",
					"description": "Wheel Lateral Skid Threshold"
				},
				{
					"type": "number",
					"name": "suspension_spring_rate",
					"default": "250",
					"description": "Spring Force (N/m)"
				},
				{
					"type": "number",
					"name": "suspension_spring_preload",
					"default": "50",
					"description": "Spring Preload (N/m)"
				},
				{
					"type": "number",
					"name": "suspension_max_raise",
					"default": "10",
					"description": "How far the wheel can go above the resting position"
				},
				{
					"type": "number",
					"name": "suspension_max_drop",
					"default": "10",
					"description": "How far the wheel can drop below the resting position"
				},
				{
					"type": "number",
					"name": "suspension_smoothing",
					"default": "0",
					"description": "Smooth suspension [0-off, 10-max] - Warning might cause momentary visual inter-penetration of the wheel against objects/terrain"
				},
				{
					"type": "number",
					"name": "suspension_damping_ratio",
					"default": "0.5",
					"description": "Suspension damping, larger value causes the suspension to come to rest faster [range 0 to 1]"
				},
				{
					"type": "number",
					"name": "suspension_wheel_load_ratio",
					"default": "0.5",
					"description": "Amount wheel load effects wheel friction. <br> - At 0 wheel friction is completely independent of the loading on the wheel (This is artificial as it always assumes even balance between all wheels) <br> - At 1 wheel friction is based on the force pressing wheel into the ground. This is more realistic. <br> - Lower value cures lift off over-steer, generally makes vehicle easier to handle under extreme motions."
				},
				{
					"type": "Vector",
					"name": "suspension_axis",
					"default": "Vector(0, 0, -1)",
					"description": "Local body direction in which where suspension forces are applied (typically along -Z-axis)"
				},
				{
					"type": "Vector",
					"name": "suspension_force_offset",
					"default": "Vector(0, 0, 0)",
					"description": "Vertical offset from where suspension forces are applied (along Z-axis)"
				}
			]
		},
		{
			"authority": "server",
			"name": "SetDoor",
			"description": "Adds a Door at offset_location from root which will pose the Character at seat_location with seat_rotation rotation.",
			"parameters": [
				{
					"type": "number",
					"name": "seat_index"
				},
				{
					"type": "Vector",
					"name": "offset_location"
				},
				{
					"type": "Vector",
					"name": "seat_location"
				},
				{
					"type": "Rotator",
					"name": "seat_rotation"
				},
				{
					"type": "number",
					"name": "trigger_radius"
				},
				{
					"type": "number",
					"name": "leave_lateral_offset",
					"description": "It's where the Character will be ejected when leaving it (e.g. -150 for left door or 150 for right door)"
				}
			]
		},
		{
			"authority": "server",
			"name": "SetSteeringWheelSetup",
			"description": "Configures where the Steering Wheel is located, so Characters can grab it procedurally properly",
			"parameters": [
				{
					"type": "Vector",
					"name": "location"
				},
				{
					"type": "number",
					"name": "radius"
				}
			]
		},
		{
			"authority": "server",
			"name": "SetHeadlightsSetup",
			"description": "Configures the Headlights Offset and Color.",
			"parameters": [
				{
					"type": "Vector",
					"name": "location"
				},
				{
					"type": "Color",
					"name": "color",
					"default": "Color(1, 0.86, 0.5)"
				}
			]
		},
		{
			"authority": "server",
			"name": "SetTaillightsSetup",
			"description": "Configures the Taillights Offset.",
			"parameters": [
				{
					"type": "Vector",
					"name": "location"
				}
			]
		},
		{
			"authority": "both",
			"name": "GetAssetName",
			"description": "Gets the Asset name",
			"return": [
				{
					"type": "VehiclePath",
					"description": "asset path"
				}
			]
		},
		{
			"authority": "both",
			"name": "GetPassenger",
			"description": "Gets a passenger from a seat",
			"parameters": [
				{
					"type": "number",
					"name": "seat"
				}
			],
			"return": [
				{
					"type": "Character",
					"description": "or nil if no passenger in seat"
				}
			]
		},
		{
			"authority": "both",
			"name": "GetPassengers",
			"description": "Gets all passengers",
			"return": [
				{
					"type": "Character[]"
				}
			]
		},
		{
			"authority": "client",
			"name": "GetRPM",
			"description": "Gets the current RPM",
			"return": [
				{
					"type": "number"
				}
			]
		},
		{
			"authority": "client",
			"name": "GetGear",
			"description": "Gets the current Gear",
			"return": [
				{
					"type": "number"
				}
			]
		}
	],
	"events": [
		{
			"name": "Horn",
			"description": "Triggered when Vehicle honks",
			"arguments": [
				{
					"type": "Vehicle",
					"name": "self"
				},
				{
					"type": "boolean",
					"name": "is_honking"
				}
			]
		},
		{
			"name": "Hit",
			"description": "Triggered when Vehicle hits something",
			"arguments": [
				{
					"type": "Vehicle",
					"name": "self"
				},
				{
					"type": "number",
					"name": "impact_force",
					"description": "The intensity of the Hit normalized by the Vehicle's weight"
				},
				{
					"type": "Vector",
					"name": "normal_impulse",
					"description": "The impulse direction it hits"
				},
				{
					"type": "Vector",
					"name": "impact_location",
					"description": "The world 3D location of the impact"
				},
				{
					"type": "Vector",
					"name": "velocity",
					"description": "The Vehicle velocity at the moment it hits"
				}
			]
		},
		{
			"name": "CharacterEntered",
			"description": "Triggered when a Character fully enters the Vehicle",
			"arguments": [
				{
					"type": "Vehicle",
					"name": "self"
				},
				{
					"type": "Character",
					"name": "character"
				},
				{
					"type": "number",
					"name": "seat",
					"description": "The seat index"
				}
			]
		},
		{
			"name": "CharacterLeft",
			"description": "Triggered when a Character fully leaves the Vehicle",
			"arguments": [
				{
					"type": "Vehicle",
					"name": "self"
				},
				{
					"type": "Character",
					"name": "character"
				}
			]
		},
		{
			"name": "CharacterAttemptEnter",
			"description": "Triggered when a Character attempts to enter the Vehicle",
			"authority": "server",
			"arguments": [
				{
					"type": "Vehicle",
					"name": "self"
				},
				{
					"type": "Character",
					"name": "character"
				},
				{
					"type": "number",
					"name": "seat",
					"description": "The seat index"
				}
			],
			"return": [
				{
					"type": "boolean",
					"description": "Return false to prevent it"
				}
			]
		},
		{
			"name": "CharacterAttemptLeave",
			"description": "Triggered when a Character attempts to leave the Vehicle",
			"authority": "server",
			"arguments": [
				{
					"type": "Vehicle",
					"name": "self"
				},
				{
					"type": "Character",
					"name": "character"
				}
			],
			"return": [
				{
					"type": "boolean",
					"description": "Return false to prevent it"
				}
			]
		}
	]
}