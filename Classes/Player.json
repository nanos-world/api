{
	"name": "Player",
	"description": "Players are Entities that represents the individual behind the mouse and keyboard. Players are spawned automatically when connected to the server.",
	"inheritance": [
		"Entity"
	],
	"functions": [
		{
			"authority": "server",
			"name": "Ban",
			"description": "Bans the player from the server",
			"parameters": [
				{
					"name": "reason",
					"type": "string"
				}
			]
		},
		{
			"authority": "server",
			"name": "Connect",
			"description": "Redirects the player to another server",
			"parameters": [
				{
					"name": "IP",
					"type": "string"
				},
				{
					"name": "password",
					"type": "string",
					"default": "",
					"description": "Server password"
				}
			]
		},
		{
			"authority": "server",
			"name": "Kick",
			"description": "Kicks the player from the server",
			"parameters": [
				{
					"name": "reason",
					"type": "string"
				}
			]
		},
		{
			"authority": "server",
			"name": "Possess",
			"description": "Makes a Player to possess and control a Character",
			"parameters": [
				{
					"name": "new_character",
					"type": "Character"
				},
				{
					"name": "blend_time",
					"type": "float",
					"default": "0"
				},
				{
					"name": "exp",
					"type": "float",
					"default": "0"
				}
			]
		},
		{
			"authority": "both",
			"name": "StartCameraFade",
			"description": "Does a camera fade to/from a solid color",
			"description_long": "Does a camera fade to/from a solid color. Animates automatically",
			"parameters": [
				{
					"name": "from_alpha",
					"type": "float",
					"description": "Alpha at which to begin the fade. Range [0..1], where 0 is fully transparent and 1 is fully opaque solid color."
				},
				{
					"name": "to_alpha",
					"type": "float",
					"description": "Alpha at which to finish the fade."
				},
				{
					"name": "duration",
					"type": "float",
					"description": "How long the fade should take, in seconds."
				},
				{
					"name": "to_color",
					"type": "Color",
					"description": "Color to fade to/from."
				},
				{
					"name": "should_fade_audio",
					"type": "boolean",
					"description": "True to fade audio volume along with the alpha of the solid color.",
					"deafult": false
				},
				{
					"name": "hold_when_finished",
					"type": "boolean",
					"description": "True for fade to hold at the ToAlpha until explicitly stopped (e.g. with StopCameraFade)",
					"deafult": false
				}
			]
		},
		{
			"authority": "both",
			"name": "SetManualCameraFade",
			"description": "Turns on camera fading at the given opacity",
			"description_long": "Turns on camera fading at the given opacity. Does not auto-animate, allowing user to animate themselves. Call StopCameraFade to turn fading back off.",
			"parameters": [
				{
					"name": "in_fade_amount",
					"type": "float",
					"description": "Range [0..1], where 0 is fully transparent and 1 is fully opaque solid color."
				},
				{
					"name": "color",
					"type": "Color"
				},
				{
					"name": "in_fade_audio",
					"type": "boolean"
				}
			]
		},
		{
			"authority": "both",
			"name": "StopCameraFade",
			"description": "Stops camera fading."
		},
		{
			"authority": "both",
			"name": "SetCameraLocation",
			"description": "Sets the Player's Camera Location (only works if not possessing any Character)",
			"parameters": [
				{
					"name": "location",
					"type": "Vector"
				}
			]
		},
		{
			"authority": "both",
			"name": "SetCameraRotation",
			"description": "Sets the Player's Camera Rotation",
			"parameters": [
				{
					"name": "rotation",
					"type": "Rotator"
				}
			]
		},
		{
			"authority": "both",
			"name": "TranslateCameraTo",
			"description": "Smoothly moves the Player's Camera Location (only works if not possessing any Character)",
			"parameters": [
				{
					"name": "location",
					"type": "Vector"
				},
				{
					"name": "time",
					"type": "float"
				},
				{
					"name": "exp",
					"type": "float",
					"default": "0",
					"description": "Exponential used to smooth interp, use 0 for linear movement"
				}
			]
		},
		{
			"authority": "both",
			"name": "RotateCameraTo",
			"description": "Smoothly moves the Player's Camera Rotation",
			"parameters": [
				{
					"name": "rotation",
					"type": "Rotator"
				},
				{
					"name": "time",
					"type": "float"
				},
				{
					"name": "exp",
					"type": "float",
					"default": "0",
					"description": "Exponential used to smooth interp, use 0 for linear movement"
				}
			]
		},
		{
			"authority": "both",
			"name": "SetCameraSocketOffset",
			"description": "Sets the Player's Camera Socket Offset (Spring Arm Offset)",
			"parameters": [
				{
					"name": "socket_offset",
					"type": "Vector"
				}
			]
		},
		{
			"authority": "both",
			"name": "SetCameraArmLength",
			"description": "Sets the Player's Camera Arm Length (Spring Arm length)",
			"parameters": [
				{
					"name": "length",
					"type": "float"
				},
				{
					"name": "force",
					"type": "boolean",
					"description": "Whether to bypass interpolation and set the target to its value directly"
				}
			]
		},
		{
			"authority": "both",
			"name": "AttachCameraTo",
			"description": "Attaches the Player`s Camera to an Actor",
			"parameters": [
				{
					"name": "actor",
					"type": "Actor"
				},
				{
					"name": "socket_offset",
					"type": "Vector"
				},
				{
					"name": "blend_speed",
					"type": "float"
				}
			]
		},
		{
			"authority": "both",
			"name": "ResetCamera",
			"description": "Resets the Camera to default state (Unspectate and Detaches)"
		},
		{
			"authority": "both",
			"name": "Spectate",
			"description": "Spectates other Player",
			"parameters": [
				{
					"name": "player",
					"type": "Player"
				},
				{
					"name": "blend_speed",
					"type": "float",
					"default": "0"
				}
			]
		},
		{
			"authority": "server",
			"name": "SetName",
			"description": "Sets the player's name",
			"parameters": [
				{
					"name": "player_name",
					"type": "string"
				}
			]
		},
		{
			"authority": "server",
			"name": "SetVOIPChannel",
			"description": "Sets the VOIP Channel of this Player (will only communicate with other players in the same channel)",
			"parameters": [
				{
					"name": "channel",
					"type": "integer"
				}
			]
		},
		{
			"authority": "both",
			"name": "SetVOIPSetting",
			"description": "Sets the VOIP Settings of this Player",
			"parameters": [
				{
					"name": "voip_setting",
					"type": "VOIPSetting"
				}
			]
		},
		{
			"authority": "both",
			"name": "SetVOIPVolume",
			"description": "Sets the VOIP Volume of this Player",
			"parameters": [
				{
					"name": "volume",
					"type": "float"
				}
			]
		},
		{
			"authority": "server",
			"name": "UnPossess",
			"description": "Release the Player from the Character"
		},
		{
			"authority": "both",
			"name": "GetSteamID",
			"return": [
				{
					"type": "string",
					"name": "steam_id"
				}
			]
		},
		{
			"authority": "both",
			"name": "GetAccountID",
			"return": [
				{
					"type": "string",
					"name": "account_id"
				}
			]
		},
		{
			"authority": "both",
			"name": "GetAccountName",
			"return": [
				{
					"type": "string",
					"name": "account_name"
				}
			]
		},
		{
			"authority": "both",
			"name": "GetAccountIconURL",
			"description": "Return a URL which can be used through WebUI and Widgets to display the Player's Steam Avatar (64x64)",
			"return": [
				{
					"type": "string",
					"name": "account_icon_url"
				}
			]
		},
		{
			"authority": "client",
			"name": "GetCameraLocation",
			"return": [
				{
					"type": "Vector",
					"name": "location"
				}
			]
		},
		{
			"authority": "client",
			"name": "GetCameraArmLength",
			"parameters": [
				{
					"name": "return_base",
					"type": "boolean",
					"default": "false",
					"description": "Whether to return the current (false) or base (true) value. The base is the same value set by SetCameraArmLength()."
				}
			],
			"return": [
				{
					"type": "float",
					"name": "length"
				}
			]
		},
		{
			"authority": "client",
			"name": "GetCameraRotation",
			"return": [
				{
					"type": "Rotator",
					"name": "rotation"
				}
			]
		},
		{
			"authority": "both",
			"name": "GetControlledCharacter",
			"return": [
				{
					"type": "Character?",
					"name": "controlled_character"
				}
			]
		},
		{
			"authority": "server",
			"name": "GetIP",
			"return": [
				{
					"type": "string",
					"name": "ip"
				}
			]
		},
		{
			"name": "GetDimension",
			"description": "Gets this Player's dimension",
			"authority": "both",
			"return": [
				{
					"type": "integer",
					"name": "dimension"
				}
			],
			"relations": {
				"events": [
					"DimensionChange"
				]
			}
		},
		{
			"name": "SetDimension",
			"description": "Sets this Player's dimension",
			"authority": "server",
			"return": [
				{
					"type": "integer",
					"name": "dimension"
				}
			],
			"relations": {
				"events": [
					"DimensionChange"
				]
			}
		},
		{
			"authority": "both",
			"name": "GetName",
			"return": [
				{
					"type": "string",
					"name": "player_name"
				}
			]
		},
		{
			"authority": "both",
			"name": "GetPing",
			"return": [
				{
					"type": "integer",
					"name": "ping"
				}
			]
		},
		{
			"authority": "both",
			"name": "GetVOIPChannel",
			"return": [
				{
					"name": "channel",
					"type": "integer"
				}
			]
		},
		{
			"authority": "client",
			"name": "IsHost",
			"return": [
				{
					"type": "boolean",
					"name": "is_host"
				}
			]
		},
		{
			"authority": "client",
			"name": "IsLocalPlayer",
			"return": [
				{
					"type": "boolean",
					"name": "is_local_player"
				}
			]
		},
		{
			"authority": "both",
			"name": "GetVOIPSetting",
			"return": [
				{
					"name": "voip_setting",
					"type": "VOIPSetting"
				}
			]
		}
	],
	"events": [
		{
			"authority": "server",
			"name": "DimensionChange",
			"description": "Triggered when a Player changes it's dimension",
			"arguments": [
				{
					"name": "self",
					"type": "Player"
				},
				{
					"name": "old_dimension",
					"type": "integer"
				},
				{
					"name": "new_dimension",
					"type": "integer"
				}
			],
			"relations": {
				"functions": [
					"SetDimension",
					"GetDimension"
				]
			}
		},
		{
			"authority": "both",
			"name": "Possess",
			"description": "Trigerred when Player starts controlling a Character",
			"arguments": [
				{
					"name": "self",
					"type": "Player"
				},
				{
					"name": "character",
					"type": "Character"
				}
			],
			"relations": {
				"functions": [
					"GetControlledCharacter"
				]
			}
		},
		{
			"authority": "server",
			"name": "Ready",
			"description": "Triggered when Player is ready (the client fully joined, loaded the map and all entities and is ready to play)",
			"arguments": [
				{
					"name": "self",
					"type": "Player"
				}
			]
		},
		{
			"authority": "both",
			"name": "UnPossess",
			"description": "A Character was released from the Player",
			"arguments": [
				{
					"name": "self",
					"type": "Player"
				},
				{
					"name": "character",
					"type": "Character"
				}
			],
			"relations": {
				"functions": [
					"GetControlledCharacter"
				]
			}
		},
		{
			"authority": "both",
			"name": "VOIP",
			"description": "When a Player starts/ends using VOIP",
			"arguments": [
				{
					"name": "self",
					"type": "Player"
				},
				{
					"name": "is_talking",
					"type": "boolean"
				}
			],
			"return": [
				{
					"type": "boolean",
					"description": "When 'is_talking' is true, return false to prevent this voice stream from playing (on server will prevent for everyone, on client will prevent only for the client)"
				}
			]
		}
	]
}
