{
	"name": "Light",
	"description": "A Light represents a Lighting source.",
	"authority": "both",
	"inheritance": [
		"Entity",
		"Actor"
	],
	"constructors": [
		{
			"description": "Default Constructor",
			"parameters": [
				{
					"type": "Vector",
					"name": "location"
				},
				{
					"type": "Rotator",
					"name": "rotation",
					"default": "Rotator(0, 0, 0)",
					"description": "Relevant only for Rect and Spot LightTypes"
				},
				{
					"type": "Color",
					"name": "color",
					"default": "Color(1, 1, 1)"
				},
				{
					"type": "LightType",
					"name": "light_type",
					"default": "LightType.Point"
				},
				{
					"type": "float",
					"name": "intensity",
					"default": "30"
				},
				{
					"type": "float",
					"name": "attenuation_radius",
					"default": "250"
				},
				{
					"type": "float",
					"name": "cone_angle",
					"default": "44",
					"description": "Relevant only for Spot LightType"
				},
				{
					"type": "float",
					"name": "inner_cone_angle_percent",
					"default": "0",
					"description": "Inner Cone Angle Percent (Relevant only for Spot LightType) (0-1)"
				},
				{
					"type": "float",
					"name": "max_daw_distance",
					"default": "5000",
					"description": "Max Draw Distance (Good for performance) - 0 for infinite"
				},
				{
					"type": "boolean",
					"name": "use_inverse_squared_falloff",
					"default": "true",
					"description": "Whether to use physically based inverse squared distance falloff, where Attenuation Radius is only clamping the light's contribution. (Spot and Point types only)"
				},
				{
					"type": "boolean",
					"name": "cast_shadows",
					"default": "true"
				},
				{
					"type": "boolean",
					"name": "visible",
					"default": "true"
				}
			]
		}
	],
	"functions": [
		{
			"name": "SetColor",
			"description": "Sets the light color",
			"authority": "both",
			"parameters": [
				{
					"type": "Color",
					"name": "color",
					"description": "The light color"
				}
			]
		},
		{
			"name": "SetTextureLightProfile",
			"description": "Sets the light Texture Profile",
			"authority": "both",
			"parameters": [
				{
					"type": "LightProfile",
					"name": "light_profile",
					"description": "The Light Profile to use"
				}
			],
			"relations": {
				"etc": [
					{
						"label": "ðŸ’¡ Light Profiles",
						"url": "#light-profiles"
					}
				]
			}
		},
		{
			"name": "SetCastShadows",
			"authority": "both",
			"parameters": [
				{
					"type": "boolean",
					"name": "is_shadows_enabled"
				}
			]
		},
		{
			"name": "SetIntensity",
			"authority": "both",
			"parameters": [
				{
					"type": "float",
					"name": "intensity"
				}
			]
		},
		{
			"name": "SetAttenuationRadius",
			"authority": "both",
			"parameters": [
				{
					"type": "float",
					"name": "attenuation_radius"
				}
			]
		},
		{
			"name": "GetCastShadows",
			"authority": "both",
			"return": [
				{
					"type": "boolean",
					"name": "is_shadows_enabled"
				}
			]
		},
		{
			"name": "GetIntensity",
			"authority": "both",
			"return": [
				{
					"type": "float",
					"name": "intensity"
				}
			]
		},
		{
			"name": "GetAttenuationRadius",
			"authority": "both",
			"return": [
				{
					"type": "float",
					"name": "attenuation_radius"
				}
			]
		},
		{
			"name": "GetColor",
			"authority": "both",
			"return": [
				{
					"type": "Color",
					"name": "color"
				}
			]
		}
	]
}